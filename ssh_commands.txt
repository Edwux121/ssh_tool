Interface + DHCP
----
#Skriptas turi paimti laisvą IP ir subnetą

uci set network.test50=interface
uci set network.test50.metric='7' #dinamiškai pajemam
uci set network.test50.ipaddr='192.168.30.1' #nurodomas appse
uci set network.test50.netmask='255.255.255.0'
uci set network.test50.delegate='1'
uci set network.test50.force_link='0'
uci set network.test50.proto='static'
uci set dhcp.test50=dhcp
uci set dhcp.test50.start='100'
uci set dhcp.test50.leasetime='12h'
uci set dhcp.test50.limit='51'
uci set dhcp.test50.interface='test50' #random dedam?
uci commit

VLAN
----
#Skriptas turi paimti laisva port ir vlan ID

uci add network switch_vlan
uci set network.@switch_vlan[{highest_vlan_str}].device='switch0'
uci set network.@switch_vlan[{highest_vlan_str}].vlan='{highest_vlan_plus_str}' #dinamiškai
uci set network.@switch_vlan[{highest_vlan_str}].vid='{highest_vlan_plus_str}' #dinamiškai
uci set network.@switch_vlan[{highest_vlan_str}].ports='0t {port_number_str}' #dinamiškai
uci commit

#VLAN priskyrimas
uci set network.test50.device='eth0.{highest_vlan_plus_str}' #dinamiškai gaunamas turi būti
uci commit


Reikia komandų:

1. Metrikos: awk '/metric/ { if ($NF > max) max = $NF } END { print max }' /etc/config/network
2. Paskutinį VLAN portą naudojama awk '/vid/ { if ($NF > max) max = $NF } END { print max }' /etc/config/network (atspausdina naudojamą ID = port, configinant reikia uci komandoje nurodyti vienu skaičiu mažesnį
3. VLAN fizinį eth awk '/vid/ { if ($NF > max) max = $NF } END { print max }' pridedam viena

stdin, stdout, stderr = client.exec_command("awk '/metric/ { if ($NF > max) max = $NF } END { gsub(/[^0-9]/, "", max); print max }' /etc/config/network")

-----

L2TP

-----

uci set firewall:

1. Sukuriamas nauja uci set firewall zona
2. Allow forward to destination zones: lan ir WAN
3. Allow forward from source zones: lan
4. uci set firewall Traffic rule praleidžianti 1701 port

----

VPN:

1. Sukuriam serverį +
2. Sukuriam client (tik username ir password arba paprašyti įvesti šią info)

Komandos (l2tp server):

uci add xl2tpd test51
uci set xl2tpd.test51=service
uci set xl2tpd.test51.type='server'
uci set xl2tpd.test51.limit='192.168.0.30' # pagal nurodytą IP
uci set xl2tpd.test51.localip='192.168.0.1' # įvedamas
uci set xl2tpd.test51.start='192.168.0.20' # pagal nurodytą IP
uci set xl2tpd.test51._name='test51'
uci set xl2tpd.test51.chap='0'
uci set xl2tpd.test51.enabled='1'

uci add xl2tpd login
uci set xl2tpd.@login[0].username='test'
uci set xl2tpd.@login[0].password='test12345'
uci set xl2tpd.@login[0].remoteip='192.168.1.1'

uci commit

uci set firewall settings:


uci set firewall.23=zone
uci set firewall.23.name='l2tp'
uci set firewall.23.device='l2tp+ xl2tp+'
uci set firewall.23.input='ACCEPT'
uci set firewall.23.forward='REJECT'
uci set firewall.23.masq='1'
uci set firewall.23.output='ACCEPT'
uci set firewall.24=forwarding
uci set firewall.24.dest='lan'
uci set firewall.24.src='l2tp'
uci set firewall.25=forwarding
uci set firewall.25.dest='wan'
uci set firewall.25.src='l2tp'
uci set firewall.26=forwarding
uci set firewall.26.dest='l2tp'
uci set firewall.26.src='lan'
uci set firewall.27=rule
uci set firewall.27.dest_port='1701'
uci set firewall.27.src='wan'
uci set firewall.27.name='Allow-l2tp-traffic'
uci set firewall.27.target='ACCEPT'
uci set firewall.27.vpn_type='l2tp'
uci set firewall.27.proto='udp'
uci set firewall.27.family='ipv4'